---
import Layout from "../../layouts/MainLayout.astro";
---

<Layout title="Admin Login - Biserica Credința">
  <div
    class="min-h-2xl flex flex-col justify-center bg-neutral-200 py-12 sm:px-6 lg:px-8 dark:bg-neutral-800"
  >
    <div class="sm:mx-auto sm:w-full sm:max-w-md">
      <div class="text-center">
        <h2 class="mt-6 text-3xl font-extrabold text-black dark:text-white">
          Login
        </h2>
        <p class="mt-2 text-lg text-black dark:text-white">
          Conectează-te pentru a gestiona postări
        </p>
      </div>
    </div>

    <div class="mt-8 sm:mx-auto sm:w-full sm:max-w-md">
      <div
        class="bg-neutral-200 px-4 py-8 sm:rounded-lg sm:px-10 dark:bg-neutral-800"
      >
        <form id="loginForm" class="space-y-6">
          <div>
            <label
              for="username"
              class="block text-sm font-medium text-black dark:text-white"
            >
              Nume utilizator
            </label>
            <div class="mt-1">
              <input
                id="username"
                name="username"
                type="text"
                required
                class="block w-full appearance-none rounded-md border border-gray-300 bg-yellow-50/60 px-4 py-3 placeholder-gray-400 focus:border-indigo-500 focus:ring-indigo-500 focus:outline-none sm:text-sm dark:bg-neutral-700/30 dark:text-neutral-300 dark:placeholder:text-neutral-400 dark:focus:ring-1"
                placeholder="Introduceți numele de utilizator"
              />
            </div>
          </div>

          <div>
            <label
              for="password"
              class="block text-sm font-medium text-black dark:text-white"
            >
              Parolă
            </label>
            <div class="mt-1">
              <input
                id="password"
                name="password"
                type="password"
                required
                class="block w-full appearance-none rounded-md border border-gray-300 bg-yellow-50/60 px-4 py-3 placeholder-gray-400 focus:border-indigo-500 focus:ring-indigo-500 focus:outline-none sm:text-sm dark:bg-neutral-700/30 dark:text-neutral-300 dark:placeholder:text-neutral-400 dark:focus:ring-1"
                placeholder="Introduceți parola"
              />
            </div>
          </div>

          <div
            id="errorMessage"
            class="hidden rounded-md border border-red-200 bg-red-50 px-4 py-3 text-red-600"
          >
            <span id="errorText"></span>
          </div>

          <div>
            <button
              type="submit"
              id="loginButton"
              class="flex w-full justify-center rounded-md border border-transparent bg-[#305c76] px-4 py-2 text-sm font-medium text-white shadow-sm hover:shadow-[0_0_20px_rgba(57,139,171,1)] focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 focus:outline-none disabled:cursor-not-allowed disabled:opacity-50 dark:bg-[#74becc] dark:text-neutral-800 dark:hover:shadow-[0_0_20px_rgba(116,190,204,1)]"
            >
              <span id="loginButtonText">Conectează</span>
              <svg
                id="loginSpinner"
                class="mr-3 -ml-1 hidden h-5 w-5 animate-spin text-white"
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
              >
                <circle
                  class="opacity-25"
                  cx="12"
                  cy="12"
                  r="10"
                  stroke="currentColor"
                  stroke-width="4"></circle>
                <path
                  class="opacity-75"
                  fill="currentColor"
                  d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
                ></path>
              </svg>
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <script>
    const loginForm = document.getElementById("loginForm");
    if (!loginForm) {
      console.error("Login form not found");
    } else {
      loginForm.addEventListener("submit", async (e) => {
        e.preventDefault();

        const loginButton = document.getElementById(
          "loginButton",
        ) as HTMLButtonElement;
        const loginButtonText = document.getElementById("loginButtonText");
        const loginSpinner = document.getElementById("loginSpinner");
        const errorMessage = document.getElementById("errorMessage");
        const errorText = document.getElementById("errorText");

        if (
          !loginButton ||
          !loginButtonText ||
          !loginSpinner ||
          !errorMessage ||
          !errorText
        )
          return;

        // Show loading state
        loginButton.disabled = true;
        loginButtonText.textContent = "Se conectează...";
        loginSpinner.classList.remove("hidden");
        errorMessage.classList.add("hidden");

        try {
          const formData = new FormData(e.target as HTMLFormElement);
          const username = formData.get("username");
          const password = formData.get("password");

          const response = await fetch("/api/admin/login", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ username, password }),
          });

          const result = await response.json();

          if (result.success) {
            // Store token in localStorage
            localStorage.setItem("adminToken", result.token);
            localStorage.setItem("adminInfo", JSON.stringify(result.admin));

            // Redirect to admin dashboard
            window.location.href = "/admin/dashboard";
          } else {
            // Show error message
            errorText.textContent = result.error || "Eroare la conectare";
            errorMessage.classList.remove("hidden");
          }
        } catch (error) {
          console.error("Login error:", error);
          errorText.textContent =
            "Eroare de conexiune. Vă rugăm să încercați din nou.";
          errorMessage.classList.remove("hidden");
        } finally {
          // Reset button state
          loginButton.disabled = false;
          loginButtonText.textContent = "Conectare";
          loginSpinner.classList.add("hidden");
        }
      });
    }
  </script>
</Layout>
